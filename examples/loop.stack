# `<counter> <end> <procedure> loop`
def loop {
    # ( counter end proc -- proc counter end counter end )
    rotr 2dup
    = {
        # ( proc counter end -- )
        3drop
    } {
        # ( proc counter end -- counter end proc )
        rotl
        # ( counter end proc -- counter end proc )
        dup eval
        # ( counter end proc -- end proc (counter + 1) )
        rotl 1 +
        # ( end proc counter -- counter end proc )
        rotr
        loop
    } ?
}

# print every number from 0 to 10
0 10 { rotl dup println rotr } loop
