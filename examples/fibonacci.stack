# a -- fib(a)
def fib {
    # Don't do anything for 1 (is it's own fibonacci number)
    dup 1 = {} {
        # Don't do anything for 0 (is it's own fibonacci number)
        dup 0 = {} {
            # a -- a fib(a - 1)
            dup 1 - fib
            # a fib(a - 1) -- fib(a - 1) fib(a - 2)
            swap 2 - fib
            # fib(a - 1) fib(a - 2) -- fib(a)
            +
        } ?
    } ?
}

def loop {
    # Break (drop counter) if counter equals ten
    dup 10 = { drop } {
        # Print fib of counter
        dup fib println
        # Call loop with incremented counter
        1 + loop
    } ?
}

# Start loop with counter 0
0 loop
